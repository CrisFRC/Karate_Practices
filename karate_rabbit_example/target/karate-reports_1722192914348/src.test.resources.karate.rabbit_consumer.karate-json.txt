{"failedCount":0,"prefixedPath":"src\/test\/resources\/karate\/rabbit_consumer.feature","packageQualifiedName":"src.test.resources.karate.rabbit_consumer","loopIndex":-1,"relativePath":"src\/test\/resources\/karate\/rabbit_consumer.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":92134900,"millis":92.1349,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":0,"text":"def QueueConsumer = Java.type('co.com.karate.Consumer')"}},{"result":{"nanos":118371400,"millis":118.3714,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":1,"text":"def consumer = new QueueConsumer()"}},{"result":{"nanos":13502700,"millis":13.5027,"status":"passed"},"step":{"comments":["#in real world, this can be a different microservice which generates an event","# Consumer should get \"triggered\"\/ react on an event"],"line":12,"prefix":"*","index":0,"text":"def event = consumer.listen()"}},{"result":{"nanos":3694500,"millis":3.6945,"status":"passed"},"step":{"line":13,"prefix":"*","index":1,"text":"def message = consumer.getList()"}},{"result":{"nanos":79431600,"millis":79.4316,"status":"passed"},"step":{"line":14,"prefix":"*","index":2,"text":"def person = message.map(x => karate.fromString(x))"}},{"result":{"nanos":5736400,"millis":5.7364,"status":"passed"},"step":{"line":15,"prefix":"*","index":3,"text":"print person"},"stepLog":"13:54:16.473 [print] [\n  {\n    \"name\": \"Person1\",\n    \"age\": 37\n  },\n  {\n    \"name\": \"Person2\",\n    \"age\": 37\n  },\n  {\n    \"name\": \"Person3\",\n    \"age\": 37\n  },\n  {\n    \"name\": \"Person4\",\n    \"age\": 37\n  },\n  {\n    \"name\": \"Person5\",\n    \"age\": 37\n  },\n  {\n    \"name\": \"Person6\",\n    \"age\": 37\n  },\n  {\n    \"name\": \"Person7\",\n    \"age\": 37\n  },\n  {\n    \"name\": \"Person8\",\n    \"age\": 37\n  },\n  {\n    \"name\": \"Person9\",\n    \"age\": 37\n  },\n  {\n    \"name\": \"Person10\",\n    \"age\": 37\n  }\n]\n \n"},{"result":{"nanos":8958400,"millis":8.9584,"status":"passed"},"step":{"comments":["#Asserting if the 1st persons name is Person1"],"line":17,"prefix":"*","index":4,"text":"match person[0].name == \"Person1\""}},{"result":{"nanos":1015700,"millis":1.0157,"status":"passed"},"step":{"comments":["#Asserting if the there is any name = Person10"],"line":19,"prefix":"*","index":5,"text":"match person[*].name contains 'Person10'"}},{"result":{"nanos":2980600,"millis":2.9806,"status":"passed"},"step":{"comments":["#Asserting if the 8th persons age is 37"],"line":21,"prefix":"*","index":6,"text":"match person[8].age == 37"}},{"result":{"nanos":7243100,"millis":7.2431,"status":"passed"},"step":{"comments":["#Asserting if the number of persons = 10"],"line":23,"prefix":"*","index":7,"text":"match person == '#[10]'"}}],"executorName":"main","line":9,"name":"Verify event","description":"","durationMillis":333.0693,"startTime":1722192856148,"failed":false,"refId":"[1:9]","endTime":1722192856494,"exampleIndex":-1}],"callDepth":0,"name":"Verify events via RabbitMQ","description":"","resultDate":"2024-07-28 01:54:16 p. m.","durationMillis":333.0693,"passedCount":1}